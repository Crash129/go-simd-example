//go:build !noasm && amd64
// AUTO-GENERATED BY GOCC -- DO NOT EDIT

TEXT Â·avx2_add(SB), $0-32
	MOVQ a+0(FP), DI
	MOVQ b+8(FP), SI
	MOVQ c+16(FP), DX
	MOVQ size+24(FP), CX
	BYTE $0x55               // push	rbp
	WORD $0x8948; BYTE $0xe5 // mov	rbp, rsp
	LONG $0xf8e48348         // and	rsp, -8
	WORD $0x8548; BYTE $0xc9 // test	rcx, rcx
	JE   LBB0_6
	LONG $0xff418d4c         // lea	r8, [rcx - 1]
	LONG $0x03e8c149         // shr	r8, 3
	WORD $0xff49; BYTE $0xc0 // inc	r8
	WORD $0x8944; BYTE $0xc0 // mov	eax, r8d
	WORD $0xe083; BYTE $0x03 // and	eax, 3
	LONG $0x19f98348         // cmp	rcx, 25
	JAE  LBB0_7
	WORD $0xc931             // xor	ecx, ecx
	JMP  LBB0_3

LBB0_7:
	LONG $0xfce08349 // and	r8, -4
	WORD $0xc931     // xor	ecx, ecx

LBB0_8:
	LONG $0x0410fcc5; BYTE $0x8e   // vmovups	ymm0, ymmword ptr [rsi + 4*rcx]
	LONG $0x0458fcc5; BYTE $0x8f   // vaddps	ymm0, ymm0, ymmword ptr [rdi + 4*rcx]
	LONG $0x0411fcc5; BYTE $0x8a   // vmovups	ymmword ptr [rdx + 4*rcx], ymm0
	LONG $0x4410fcc5; WORD $0x208e // vmovups	ymm0, ymmword ptr [rsi + 4*rcx + 32]
	LONG $0x4458fcc5; WORD $0x208f // vaddps	ymm0, ymm0, ymmword ptr [rdi + 4*rcx + 32]
	LONG $0x4411fcc5; WORD $0x208a // vmovups	ymmword ptr [rdx + 4*rcx + 32], ymm0
	LONG $0x4410fcc5; WORD $0x408e // vmovups	ymm0, ymmword ptr [rsi + 4*rcx + 64]
	LONG $0x4458fcc5; WORD $0x408f // vaddps	ymm0, ymm0, ymmword ptr [rdi + 4*rcx + 64]
	LONG $0x4411fcc5; WORD $0x408a // vmovups	ymmword ptr [rdx + 4*rcx + 64], ymm0
	LONG $0x4410fcc5; WORD $0x608e // vmovups	ymm0, ymmword ptr [rsi + 4*rcx + 96]
	LONG $0x4458fcc5; WORD $0x608f // vaddps	ymm0, ymm0, ymmword ptr [rdi + 4*rcx + 96]
	LONG $0x4411fcc5; WORD $0x608a // vmovups	ymmword ptr [rdx + 4*rcx + 96], ymm0
	LONG $0x20c18348               // add	rcx, 32
	LONG $0xfcc08349               // add	r8, -4
	JNE  LBB0_8

LBB0_3:
	WORD $0x8548; BYTE $0xc0 // test	rax, rax
	JE   LBB0_6
	LONG $0x8a148d48         // lea	rdx, [rdx + 4*rcx]
	LONG $0x8e348d48         // lea	rsi, [rsi + 4*rcx]
	LONG $0x8f0c8d48         // lea	rcx, [rdi + 4*rcx]
	LONG $0x05e0c148         // shl	rax, 5
	WORD $0xff31             // xor	edi, edi

LBB0_5:
	LONG $0x0410fcc5; BYTE $0x3e // vmovups	ymm0, ymmword ptr [rsi + rdi]
	LONG $0x0458fcc5; BYTE $0x39 // vaddps	ymm0, ymm0, ymmword ptr [rcx + rdi]
	LONG $0x0411fcc5; BYTE $0x3a // vmovups	ymmword ptr [rdx + rdi], ymm0
	LONG $0x20c78348             // add	rdi, 32
	WORD $0x3948; BYTE $0xf8     // cmp	rax, rdi
	JNE  LBB0_5

LBB0_6:
	WORD $0x8948; BYTE $0xec // mov	rsp, rbp
	BYTE $0x5d               // pop	rbp
	WORD $0xf8c5; BYTE $0x77 // vzeroupper
	BYTE $0xc3               // ret
